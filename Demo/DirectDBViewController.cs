// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using Foundation;
using UIKit;

namespace Demo
{
	public partial class DirectDBViewController : UIViewController
	{
        static private int db_int;
        static private Person currentUser;
		public DirectDBViewController (IntPtr handle) : base (handle)
		{
		}
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Add Direct Debits";
            update(currentUser.Id);

            DirectDebit_Name.EditingDidEnd += DirectDebit_Name_EditingDidEnd;
            DirectDebit_Period.EditingDidEnd += DirectDebit_Period_EditingDidEnd;

            View.UserInteractionEnabled = true;
            View.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            {
                this.View.EndEditing(true);
            }
            ));

            db_cost.EditingDidEnd += DirectDebit_Cost_EditingDidEnd;
            DirectDebit_Add.TouchDown += DirectDebit_Add_TouchDown;
            //NavigationItem.RightBarButtonItem.Clicked += RightBarButtonItem_Clicked;
        }

        private void DirectDebit_Cost_EditingDidEnd(object sender, EventArgs e)
        {
            if (db_cost.Text.ToString() != string.Empty)
            {
                db_cost.BackgroundColor = UIColor.Green;
            }
        }

        public void refresh()
        {
            DirectDebit_Name.BackgroundColor = UIColor.Clear;
            DirectDebit_Name.Text = "";
            DirectDebit_Period.BackgroundColor = UIColor.Clear;
            DirectDebit_Period.Text = "";
            DirectDebit_Add.BackgroundColor = UIColor.Clear;
            db_cost.Text = "";
            db_cost.BackgroundColor = UIColor.Clear;
        }
        private void RightBarButtonItem_Clicked(object sender, EventArgs e)
        {
            NavigationController.PopToRootViewController(true);
        }

        private void DirectDebit_Add_TouchDown(object sender, EventArgs e)
        {
            DirectDebits directDebit = new DirectDebits
            {
                m_userID = currentUser.Id,
                m_days = int.Parse(DirectDebit_Period.Text.ToString()),
                m_Name = DirectDebit_Name.Text.ToString(),
                m_cost = float.Parse(db_cost.Text.ToString())
                
            };
            using (SQLiteConnection connection = new SQLiteConnection(AppDelegate.FilePath))
            {
                connection.Insert(directDebit);
            }

            DirectDebit_Show.Text = $"{directDebit.m_Name} added";
            NavigationItem.RightBarButtonItem = new UIBarButtonItem(UIBarButtonSystemItem.Done, target: View, action: null);
            refresh();
        }

        private void DirectDebit_Period_EditingDidEnd(object sender, EventArgs e)
        {
            if(DirectDebit_Period.Text.ToString() != string.Empty)
            {
                DirectDebit_Period.BackgroundColor = UIColor.Green;
            }
            
        }

        private void DirectDebit_Name_EditingDidEnd(object sender, EventArgs e)
        {
            if (DirectDebit_Name.Text.ToString() != string.Empty)
            {
                DirectDebit_Name.BackgroundColor = UIColor.Green;
            }
        }

        /// <summary>
        /// returns what the int had been changed to
        /// </summary>
        /// <param name="selection"></param>
        /// <returns></returns>
        static public int update(int selection)
        {
            db_int = selection;
            return db_int;
        }
        static public void UserSelected(Person person)
        {
            currentUser = person;
        }
    }
}
