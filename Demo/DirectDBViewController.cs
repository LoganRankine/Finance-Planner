// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using Foundation;
using UIKit;
using System.Collections.Generic;
using System.Linq;

namespace Demo
{
	public partial class DirectDBViewController : UIViewController
	{
        static private int db_int;
        static private Person currentUser;
        static public bool editingMode = false;
        public DirectDBViewController (IntPtr handle) : base (handle)
		{
		}
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Add Direct Debits";
            update(currentUser.Id);

            //Displays done button on navigation bar
            NavigationItem.RightBarButtonItem = new UIBarButtonItem(UIBarButtonSystemItem.Done, target: View, action: null);

            //if textfields has been edited shows green
            DirectDebit_Name.EditingDidEnd += DirectDebit_Name_EditingDidEnd;
            DirectDebit_Period.EditingDidEnd += DirectDebit_Period_EditingDidEnd;
            db_cost.EditingDidEnd += DirectDebit_Cost_EditingDidEnd;
            DirectDebit_BillingDay.EditingDidEnd += DirectDebit_BillingDay_EditingDidEnd;

            View.UserInteractionEnabled = true;
            View.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            {
                this.View.EndEditing(true);
            }
            ));

            DirectDebit_Add.TouchDown += DirectDebit_Add_TouchDown;

            NavigationItem.RightBarButtonItem.Clicked += RightBarButtonItem_Clicked;

        }

        private void DirectDebit_BillingDay_EditingDidEnd(object sender, EventArgs e)
        {
            if (DirectDebit_BillingDay.Text.ToString() != string.Empty)
            {
                DirectDebit_BillingDay.BackgroundColor = UIColor.Green;
            }
            else if (DirectDebit_BillingDay.Text.ToString().Contains("£"))
            {
                DirectDebit_BillingDay.BackgroundColor = UIColor.Red;
            }
        }

        /// <summary>
        /// Shows direct debits added
        /// </summary>
  

        /// <summary>
        /// Once the user has inputted the cost will highlight textfield to show them its been recongnised
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void DirectDebit_Cost_EditingDidEnd(object sender, EventArgs e)
        {
            if (db_cost.Text.ToString() != string.Empty)
            {
                db_cost.BackgroundColor = UIColor.Green;
            }
            else if (db_cost.Text.ToString().Contains("£"))
            {
                db_cost.BackgroundColor = UIColor.Red;
            }
        }

        /// <summary>
        /// Resets the state of all button once a new has inputed their direct debit
        /// </summary>
        public void refresh()
        {
            DirectDebit_Name.BackgroundColor = UIColor.Clear;
            DirectDebit_Name.Text = "";
            DirectDebit_Period.BackgroundColor = UIColor.Clear;
            DirectDebit_Period.Text = "";
            DirectDebit_Add.BackgroundColor = UIColor.Clear;
            db_cost.Text = "";
            db_cost.BackgroundColor = UIColor.Clear;
            DirectDebit_BillingDay.Text = "";
            DirectDebit_BillingDay.BackgroundColor = UIColor.Clear;
        }

        /// <summary>
        /// Calculates how much money will be deducted from the overall allowance the user has inputted
        /// </summary>
        private void Calculateexpense(DirectDebits directDebit)
        {
            //use billing start date and user start month and year to calculate
            string[] array = currentUser.m_StartDate.Split("-");

            DateTime startdate = Convert.ToDateTime($"{array[0]}-{array[1]}-{directDebit.m_billingDay}");
            DateTime enddate = Convert.ToDateTime(currentUser.m_EndDate);
            double day = (enddate - startdate).TotalDays;
            int dates = (int)day / (int)directDebit.m_days;
            double reg = dates * directDebit.m_cost;
            using (SQLiteConnection connection = new SQLiteConnection(AppDelegate.FilePath))
            {

                //currentUser.m_Money;
                currentUser.m_Money = currentUser.m_Money - (float)reg;
                //float newnum = currentUser.m_Money - float.Parse(reg);
                connection.Update(currentUser);

            }
            
        }

        
        private void RightBarButtonItem_Clicked(object sender, EventArgs e)
        {
            NavigationController.PopToRootViewController(true);
        }

        private int convertDays()
        {
            try
            {
                return int.Parse(DirectDebit_Period.Text.ToString());
            }
            catch
            {
                return 0;
            }
        }

        private int convertBillingDay()
        {
            try
            {
                string hello = DirectDebit_BillingDay.Text.ToString();
                return int.Parse(hello);
            }
            catch
            {
                return 0;
            }
        }

        private float convertCost()
        {
            try
            {
                return float.Parse(db_cost.Text.ToString());
            }
            catch
            {
                return 0;
            }
        }

        private void DirectDebit_Add_TouchDown(object sender, EventArgs e)
        {
            DirectDebits directDebit = new DirectDebits
            {
                m_userID = currentUser.Id,
                m_days = convertDays(),
                m_Name = DirectDebit_Name.Text.ToString(),
                m_cost = convertCost(),
                m_billingDay = convertBillingDay()
                
            };

            if (directDebit.m_days != 0)
            {
                if(directDebit.m_Name != String.Empty)
                {
                    if(directDebit.m_cost != 0)
                    {
                        if(directDebit.m_billingDay != 0)
                        {
                            //add the direct debit to direct debits database
                            using (SQLiteConnection connection = new SQLiteConnection(AppDelegate.FilePath))
                            {
                                connection.Insert(directDebit);
                              
                            }

                            //calculate how much it deducts from allowance and updates tracker database
                            Calculateexpense(directDebit);

                            refresh();
                            DirectDebit_Show.Text = $"\r\n{directDebit.m_Name}: {directDebit.m_cost} added";
                          
                        }
                        else
                        {
                            //change field to red
                            DirectDebit_BillingDay.BackgroundColor = UIColor.Red;

                            //creates alert and button to alert user
                            UIAlertController alertUser3 = new UIAlertController();
                            alertUser3.Title = "Billing day not given";
                            alertUser3.Message = "Please give billing day of direct debit";
                            UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                            alertUser3.AddAction(alertUserAction1);

                            //show alert
                            this.PresentViewController(alertUser3, true, null);
                        }

                    }
                    else
                    {
                        //change field to red
                        db_cost.BackgroundColor = UIColor.Red;

                        //creates alert and button to alert user
                        UIAlertController alertUser3 = new UIAlertController();
                        alertUser3.Title = "Cost not given";
                        alertUser3.Message = "Please give cost of direct debit";
                        UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                        alertUser3.AddAction(alertUserAction1);

                        //show alert
                        this.PresentViewController(alertUser3, true, null);
                    }
                }
                else
                {
                    //change field to red
                    DirectDebit_Name.BackgroundColor = UIColor.Red;

                    //creates alert and button to alert user
                    UIAlertController alertUser2 = new UIAlertController();
                    alertUser2.Title = "Name not given";
                    alertUser2.Message = "Please give direct debit a name";
                    UIAlertAction alertUserAction2 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                    alertUser2.AddAction(alertUserAction2);

                    //shows alert
                    this.PresentViewController(alertUser2, true, null);
                }
            }
            else
            {
                //change field to red
                DirectDebit_Period.BackgroundColor = UIColor.Red;

                //creates alert and button to alert user
                UIAlertController alertUser1 = new UIAlertController();
                alertUser1.Title = "Day not inputted";
                alertUser1.Message = "Please input a value into days field";
                UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                alertUser1.AddAction(alertUserAction1);

                //shows alert
                this.PresentViewController(alertUser1, true, null);
            }
        }

        private void DirectDebit_Period_EditingDidEnd(object sender, EventArgs e)
        {
            if(DirectDebit_Period.Text.ToString() != string.Empty)
            {
                DirectDebit_Period.BackgroundColor = UIColor.Green;
            }
            else if (DirectDebit_Period.Text.ToString().Contains("£") == true)
            {
                DirectDebit_Period.BackgroundColor = UIColor.Red;
            }

        }

        private void DirectDebit_Name_EditingDidEnd(object sender, EventArgs e)
        {
            if (DirectDebit_Name.Text.ToString() != string.Empty)
            {
                DirectDebit_Name.BackgroundColor = UIColor.Green;
            }
            
        }

        /// <summary>
        /// returns what the int had been changed to
        /// </summary>
        /// <param name="selection"></param>
        /// <returns></returns>
        static public int update(int selection)
        {
            db_int = selection;
            return db_int;
        }
        static public void UserSelected(Person person)
        {
            currentUser = person;
        }
    }
}
