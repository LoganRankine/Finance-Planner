// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace Demo
{
	public partial class EditTrackerViewController : UIViewController
	{
        private static Person currentPerson;
		public EditTrackerViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Editing: " + currentPerson.m_Name;

            DeleteTracker.TouchDown += DeleteTracker_TouchDown;
        }

        private void DeleteTracker_TouchDown(object sender, EventArgs e)
        {
            RemoveUser(currentPerson);
            //creates alert and button to alert user
            UIAlertController alertUser2 = new UIAlertController();
            alertUser2.Title = "Tracker delete";
            alertUser2.Message = $"{currentPerson.m_Name} has been deleted";
            UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
            alertUser2.AddAction(alertUserAction1);

            //shows alert 
            this.PresentViewController(alertUser2, true, null);
        }

        private void RemoveUser(Person user)
        {
            using (SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
            {
                
                foreach(BudgetInfo person in conn.Table<BudgetInfo>().ToList())
                {
                    if(person.userId == user.Id)
                    {
                        conn.Delete(person);
                    }
                }
                foreach(DirectDebits person in conn.Table<DirectDebits>().ToList())
                {
                    if(person.m_userID == user.Id)
                    {
                        conn.Delete(person);
                    }
                }
                conn.Delete(user);
            }
        }

        public static void updatePerson(Person user)
        {
            currentPerson = user;
        }
    }
}
