// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace Demo
{
	public partial class EditTrackerViewController : UIViewController
	{
        private static Person currentPerson;
        private List<DirectDebits> db = new List<DirectDebits>();
		public EditTrackerViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Editing: " + currentPerson.m_Name;
            
            DeleteTracker.TouchDown += DeleteTracker_TouchDown;
            GetDirects();
            AddNewDirectDebit.TouchDown += AddNewDirectDebit_TouchDown;
            ShowDirects.Source = new ShowDirects(db);
        }

        private void AddNewDirectDebit_TouchDown(object sender, EventArgs e)
        {
            DirectDBViewController.UserSelected(currentPerson);
            DirectDBViewController view = Storyboard.InstantiateViewController(identifier: "DirectDBViewController") as DirectDBViewController;
            NavigationController.PushViewController(view, true);
        }

        private void GetDirects()
        {
            using(SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
            {
                List<DirectDebits> temp = new List<DirectDebits>();
                try
                {
                    temp = conn.Table<DirectDebits>().ToList();
                    foreach (DirectDebits item in temp)
                    {
                        if (item.m_userID == currentPerson.Id)
                        {
                            db.Add(item);
                        }
                    }
                }
                catch
                {
                    //there is no direct debits ignore for now
                }
            }
        }

        private void DeleteTracker_TouchDown(object sender, EventArgs e)
        {
            RemoveUser(currentPerson);
            ViewController view = Storyboard.InstantiateViewController(identifier: "ViewController") as ViewController;
            NavigationController.PushViewController(view, true);
            //creates alert and button to alert user
            UIAlertController alertUser2 = new UIAlertController();
            alertUser2.Title = "Tracker delete";
            alertUser2.Message = $"{currentPerson.m_Name} has been deleted";
            UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
            alertUser2.AddAction(alertUserAction1);

            //shows alert 
            this.PresentViewController(alertUser2, true, null);
        }

        /// <summary>
        /// Takes Person object in to remove object from person database and any reference to the person object in any
        /// databases
        /// </summary>
        /// <param name="user"></param>
        private void RemoveUser(Person user)
        {
            using (SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
            {
                
                foreach(BudgetInfo person in conn.Table<BudgetInfo>().ToList())
                {
                    if(person.userId == user.Id)
                    {
                        conn.Delete(person);
                    }
                }
                foreach(DirectDebits person in conn.Table<DirectDebits>().ToList())
                {
                    if(person.m_userID == user.Id)
                    {
                        conn.Delete(person);
                    }
                }
                conn.Delete(user);
                
            }
        }

        public static void updatePerson(Person user)
        {
            currentPerson = user;
        }
    }
}
