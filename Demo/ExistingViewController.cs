// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using System.Linq;
using Foundation;
using UIKit;
using System.Collections.Generic;
using CoreGraphics;

namespace Demo
{
    public partial class ExistingViewController : UIViewController
    {
        public static string db_string;
        public static int db_int = 999;
        public static bool tru = false;

        List<Person> trackers = new List<Person>();
        public ExistingViewController(IntPtr handle) : base(handle)
        {
        }

        

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

            
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            var gradient = new CoreAnimation.CAGradientLayer();
            gradient.Frame = View.Bounds;
            UIColor color = UIColor.FromRGB(175, 229, 252);

            CoreGraphics.CGColor[] colour = { UIColor.Blue.CGColor, color.CGColor };
            gradient.Colors = colour;
            gradient.StartPoint = new CGPoint(0, 0);
            gradient.EndPoint = new CGPoint(1, 1);
            View.Layer.InsertSublayer(gradient, 0);

            //View.BackgroundColor = UIColor.Blue;

            Title = "Open Tracker";
            //this.ListDataBase.DataSource = (IUITableViewDataSource)this;
            //this.ListDataBase.Delegate = (IUITableViewDelegate)this;

            numberOfBudgetsSaved();

            //DateText.Text = DateTime.Now.ToString("dddd dd MMMM").ToUpper();

            ShowExisting.Source = new ListDatabase(trackers);
            
            //NavigationItem.RightBarButtonItem = new UIBarButtonItem(UIBarButtonSystemItem.Done, target: View, action: null);

            var NextPage = new UIBarButtonItem(UIBarButtonSystemItem.Done, target: View, action: null);
            var EditTracker = new UIBarButtonItem(UIBarButtonSystemItem.Edit, target: View, action: null);
            //NextPage.Title = "Next";
            //NavigationItem.RightBarButtonItem.Title = "Next";          

            UIBarButtonItem[] button = { NextPage, EditTracker };
            NavigationItem.SetRightBarButtonItems(button, true);
            
            NavigationItem.RightBarButtonItem.Clicked += RightBarButtonItem_Clicked;

            NavigationItem.RightBarButtonItems[1].Clicked += ExistingViewController_Clicked;

            //recalls ViewDidLoad to refresh any data
            //this.ViewDidLoad();


            //_table.UserInteractionEnabled = true;
            //_table.AddGestureRecognizer(new UITapGestureRecognizer(() =>
            //{
            //    this.ViewDidLoad();
            //}
            //));
            //ShowExisting.Sel
            
            
           
           

           
        }

        private void ChangeSomething()
        {
            var row = ShowExisting.IndexPathForSelectedRow;
        }

        private void ExistingViewController_Clicked(object sender, EventArgs e)
        {
            EditTrackerViewController.updatePerson(trackers[db_int]);
            EditTracker();
        }

        private void EditTracker()
        {
            EditTrackerViewController edit = Storyboard.InstantiateViewController(identifier: "EditTrackerViewController") as EditTrackerViewController;
            NavigationController.PushViewController(edit, true);
        }

        private void RightBarButtonItem_Clicked(object sender, EventArgs e)
        {
            change();
        }

        static public void update(int selection)
        {
            db_int = selection;
            TrackerViewController.update(selection);
            
        }
     
        public void change()
        {
            TrackerViewController trackerViewController = Storyboard.InstantiateViewController(identifier: "TrackerViewController") as TrackerViewController;
            //existingViewController.ModalPresentationStyle = UIModalPresentationStyle.FullScreen;
            //PresentViewController(existingViewController, true, null);
            NavigationController.PushViewController(trackerViewController, true);
        }
        private void numberOfBudgetsSaved()
        {         
            using (SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
            {
                trackers = conn.Table<Person>().ToList();
                //many = conn.Table<Person>().ToList().Count();
            }
        }
    }

    
}
