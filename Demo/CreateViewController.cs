// This file has been autogenerated from a class added in the UI designer.

using System;
using SQLite;
using Foundation;
using UIKit;
using System.Linq;
using CoreGraphics;

namespace Demo
{
	public partial class CreateViewController : UIViewController
	{
        private bool direct = false;
        partial void Switch_Clicked(UISwitch sender)
        {
            direct = Switch_DirectDebit.On;
        }
        
		public CreateViewController (IntPtr handle) : base (handle)
		{
        }
        
        public override void ViewDidLoad()
        {

            base.ViewDidLoad();

            var gradient = new CoreAnimation.CAGradientLayer();
            gradient.Frame = View.Bounds;
            UIColor color = UIColor.FromRGB(175, 229, 252);

            CoreGraphics.CGColor[] colour = { UIColor.Blue.CGColor, color.CGColor };
            gradient.Colors = colour;
            gradient.StartPoint = new CGPoint(0, 0);
            gradient.EndPoint = new CGPoint(1, 1);
            View.Layer.InsertSublayer(gradient, 0);

            Title = "Create New Tracker";

            //Textfields will turn green if edited
            Budget_TextField.EditingDidEnd += Budget_TextField_EditingDidEnd;
            StartDate.EditingDidEnd += StartDate_EditingDidEnd;
            EndDate.EditingDidEnd += EndDate_EditingDidEnd;
            Money.EditingDidEnd += Money_EditingDidEnd;

            //When you click away from keyboard it goes away
            View.UserInteractionEnabled = true;
            View.AddGestureRecognizer(new UITapGestureRecognizer(()=>
            {
                this.View.EndEditing(true);
            }
            ));

            NavigationItem.RightBarButtonItem = new UIBarButtonItem(UIBarButtonSystemItem.Add, target: View, action: null);
            NavigationItem.RightBarButtonItem.Clicked += RightBarButtonItem_Clicked;

            //Submit.TouchDown += Submit_TouchDown;
            
        }

        /// <summary>
        /// Converts money input into float and returns
        /// if fails to convert returns 0
        /// </summary>
        /// <returns></returns>
        private float convertMoney()
        {
            try
            {
                float temp = float.Parse(Money.Text.ToString());
                return temp;
            }
            catch
            {
                return 0;
            }
        }

        private void RightBarButtonItem_Clicked(object sender, EventArgs e)
        {
            //creates object person and gets input from user and populates objects variables
            Person BudgetName = new Person
            {
                m_Name = Budget_TextField.Text.ToString(),
                m_StartDate = RemoveSpaces(StartDate.Date.ToString()),
                m_EndDate = RemoveSpaces(EndDate.Date.ToString()),
                m_Money = convertMoney()
            };

            //see if end date is later than start date
            if(DateTime.Compare((DateTime)StartDate.Date,(DateTime)EndDate.Date) < 0)
            {
                if(BudgetName.m_Name != string.Empty)
                {
                    if(BudgetName.m_Money != 0)
                    {
                        //Adds object created into SQLite database
                        using (SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
                        {
                            conn.CreateTable<Person>();
                            conn.CreateTable<BudgetInfo>();
                            conn.CreateTable<DirectDebits>();

                            
                            conn.Insert(BudgetName);
                            //if(debugging == true)
                            //{
                            //    int rows = conn.Insert(BudgetName);
                            //}

                        }
                        if (direct == true)
                        {
                            DirectDBViewController.UserSelected(BudgetName);
                            DirectDBViewController view = Storyboard.InstantiateViewController(identifier: "DirectDBViewController") as DirectDBViewController;
                            NavigationController.PushViewController(view, true);
                        }
                        else
                        {
                            NavigationController.PopToRootViewController(true);
                        }
                    }
                    else
                    {
                        //sets background colour to red to show which needs editing
                        Money.BackgroundColor = UIColor.Red;

                        //creates alert and button to alert user
                        UIAlertController alertUser4 = new UIAlertController();
                        alertUser4.Title = "No money inputted";
                        alertUser4.Message = "Please input a number into the money field";
                        UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                        alertUser4.AddAction(alertUserAction1);

                        //shows alert 
                        this.PresentViewController(alertUser4, true, null);
                    }
                    
                }
                else
                {
                    //sets background colour to red to show which needs editing
                    Budget_TextField.BackgroundColor = UIColor.Red;

                    //creates alert and button to alert user
                    UIAlertController alertUser2 = new UIAlertController();
                    alertUser2.Title = "No name given";
                    alertUser2.Message = "Give budget name a name";
                    UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
                    alertUser2.AddAction(alertUserAction1);

                    //shows alert 
                    this.PresentViewController(alertUser2, true, null);
                }
                
            }
            else
            {
                //sets background colour to red to show which needs editing
                EndDate.BackgroundColor = UIColor.Red;

                //creates alert and button to alert user
                UIAlertController alertUser1 = new UIAlertController();
                alertUser1.Title = "Incorrect Dates";
                alertUser1.Message = "Input a end date that is later than start date";
                UIAlertAction alertUserAction1 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);           
                alertUser1.AddAction(alertUserAction1);

                //shows alert 
                this.PresentViewController(alertUser1, true, null);
            }

            ////creates alert and button to alert user
            //UIAlertController alertUser3 = new UIAlertController();
            //alertUser3.Title = "Tracker not created";
            //alertUser3.Message = "Please fill out text fields to contine";
            //UIAlertAction alertUserAction3 = UIAlertAction.Create("OK", UIAlertActionStyle.Default, null);
            //alertUser3.AddAction(alertUserAction3);

            ////shows alert
            //this.PresentViewController(alertUser3, true, null);

            //NavigationController.PopToRootViewController(true);

        }

       
        private void DirectDebit_TouchDown(object sender, EventArgs e)
        {
            //DirectDebit.
        }

        private void Money_EditingDidEnd(object sender, EventArgs e)
        {
            if (Money.Text.ToString() != string.Empty)
            {
                Money.BackgroundColor = UIColor.Green;
            }
            else if(Money.Text.ToString().Contains("Â£")== true)
            {
                Money.BackgroundColor = UIColor.Red;
            }
            
        }

        private void EndDate_EditingDidEnd(object sender, EventArgs e)
        {
            EndDate.BackgroundColor = UIColor.Green;
        }

        private void StartDate_EditingDidEnd(object sender, EventArgs e)
        {
            StartDate.BackgroundColor = UIColor.Green;
        }

        private void Budget_TextField_EditingDidEnd(object sender, EventArgs e)
        {
            if(Budget_TextField.Text.ToString() != string.Empty)
            {
                Budget_TextField.BackgroundColor = UIColor.Green;
            }
        }

        private void Submit_TouchDown(object sender, EventArgs e)
        {
            //creates object person and gets input from user and populates objects variables
            Person BudgetName = new Person
            {
                m_Name = Budget_TextField.Text.ToString(),
                m_StartDate = RemoveSpaces(StartDate.Date.ToString()),
                m_EndDate = RemoveSpaces(EndDate.Date.ToString()),
                m_Money = int.Parse(Money.Text.ToString())
            };

            //Adds object created into SQLite database
            using (SQLiteConnection conn = new SQLiteConnection(AppDelegate.FilePath))
            {
                conn.CreateTable<Person>();
                conn.CreateTable<BudgetInfo>();
                conn.Insert(BudgetName);
                //if(debugging == true)
                //{
                //    int rows = conn.Insert(BudgetName);
                //}
                
            }
        }
        private string RemoveSpaces(string date)
        {
            string[] datea = date.Split(" ");
            return datea[0];

        }

        //Method that when button pressed it'll go to home menu
        private void BackButton_TouchDown(object sender, EventArgs e)
        {
            ViewController viewController = Storyboard.InstantiateViewController(identifier: "ViewController") as ViewController;
            viewController.ModalPresentationStyle = UIModalPresentationStyle.FullScreen;
            PresentViewController(viewController, true, null);
        }
    }
}
